<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="com.gdl.schedule.mapper.UserMapper">
	<!-- 根据用户名查询用户信息 -->
	<!-- User findUserByUserName(String username) -->
	<select id="findUserByUserName"
		resultType="com.gdl.schedule.entity.User">
		SELECT
			id,
			userName,
			password,
			headPortrait,
			nickName,
			fullName,
			addDate,
			mobilePhone,
			lastLoginDate,
			state,
			type,
			roleID
		FROM 
			t_user
		WHERE
			userName=#{userName}
	</select>
	
	<!-- 根据用户ID查询用户信息 -->
	<!-- User findUserByID(Integer id) -->
	<select id="findUserByID"
		resultType="com.gdl.schedule.entity.User">
		SELECT
		   id,
		   userName,
		   password,
		   headPortrait,
		   nickName,
		   fullName,
		   addDate,
		   mobilePhone,
		   lastLoginDate,
		   state,
		   type,
		   roleID
		FROM
			t_user
		WHERE
			id=#{id}
	</select>

	<!-- 新增用户 -->
	<!-- Integer insertUser(User user) -->
	<insert id="insertUser"
		parameterType="com.gdl.schedule.entity.User"
		useGeneratedKeys="true"
		keyProperty="id">
		INSERT INTO t_user (
			userName,
			password,
			headPortrait,
			nickName,
			fullName,
			addDate,
			mobilePhone,
			lastLoginDate,
			state,
			type,
			roleID
		) VALUES (
			#{userName},
			#{password},
			#{headPortrait},
			#{nickName},
			#{fullName},
			#{addDate},
			#{mobilePhone},
			#{lastLoginDate},
			#{state},
			#{type},
			#{roleID}
		)
	</insert>
	
	<!-- 修改用户信息 -->
	<!-- Integer updateUser(User user) -->
	<update id="updateUser"
		parameterType="com.gdl.schedule.entity.User">
		UPDATE
			t_user
		SET 
			<if test="userName != null">
				userName=#{userName},
			</if>
			<if test="password != null">
				password=#{password},
			</if>
			<if test="headPortrait != null">
				headPortrait=#{headPortrait},
			</if>
			<if test="nickName != null">
				nickName=#{nickName},
			</if>
			<if test="fullName != null">
				fullName=#{fullName},
			</if>
			<if test="addDate != null">
				addDate=#{addDate},
			</if>
			<if test="mobilePhone != null">
				mobilePhone=#{mobilePhone},
			</if>
			<if test="lastLoginDate != null">
				lastLoginDate=#{lastLoginDate},
			</if>
			<if test="state != null">
				state=#{state},
			</if>
			<if test="type != null">
				type=#{type},
			</if>
			<if test="roleID != null">
				roleID=#{roleID},
			</if>
			id=#{id}
		WHERE
			id=#{id}
	</update>
	
	<!-- 根据id删除用户 -->
	<!-- Integer deleteUser(Integer id) -->
	<delete id="deleteUser">
		DELETE FROM
			t_user
		WHERE
			id=#{id}
	</delete>
	<!--<delete id="deleteMoreBook" parameterType="List">-->
		<!--&lt;!&ndash; delete from t_books where bid in(7789,7790) &ndash;&gt;-->
		<!--&lt;!&ndash; forEach : 用来循环 collection : 用来指定循环的数据的类型 可以填的值有：array,list,map item -->
			<!--: 循环中为每个循环的数据指定一个别名 index : 循环中循环的下标 open : 开始 close : 结束 separator : 数组中元素之间的分隔符 &ndash;&gt;-->
		<!--delete from t_books where bid in-->
		<!--<foreach collection="list" item="bid" index="no" open="(" separator="," close=")">-->
			<!--#{bid}-->
		<!--</foreach>-->
	<!--</delete>-->
</mapper>







